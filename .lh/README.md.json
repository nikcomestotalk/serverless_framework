{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1742566017640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1742570278603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,13 @@\n Project Structure\n \n aws-lambda-deployment/\n │── scripts/\n-│ ├── pushtoStaging.sh # Shell script for packaging and deploying Lambda functions\n+│ ├── pushToServer.sh # Shell script for packaging and deploying Lambda functions\n │── config/\n │ ├── template_2.json # JSON file with API Gateway endpoints and Lambda metadata\n │── src/\n-│ ├── CloudFormation.js # Script to generate CloudFormation templates\n+│ ├── generate_cf.js # Script to generate CloudFormation templates\n │── README.md # Documentation on how to use the project\n │── LICENSE # Open-source license (e.g., MIT)\n \n Features\n@@ -31,9 +31,9 @@\n AWS CLI installed and configured.\n \n Node.js installed.\n \n-Bash shell for executing pushtoStaging.sh.\n+Bash shell for executing pushToServer.sh.\n \n Deployment Steps\n \n Clone the repository:\n@@ -49,21 +49,21 @@\n Update config/template_2.json with your API Gateway and Lambda configurations.\n \n Run the deployment script:\n \n-./scripts/pushtoStaging.sh\n+./scripts/pushToServer.sh\n \n File Descriptions\n \n-pushtoStaging.sh\n+pushToServer.sh\n \n Packages Lambda functions into a zip file.\n \n-Generates a CloudFormation template using CloudFormation.js.\n+Generates a CloudFormation template using generate_cf.js.\n \n Deploys the stack using AWS CLI.\n \n-CloudFormation.js\n+generate_cf.js\n \n Reads template_2.json.\n \n Creates a CloudFormation template dynamically.\n@@ -74,4 +74,7 @@\n \n License\n \n This project is licensed under the MIT License.\n+\n+Pre-requisite\n+run aws configure before running this script.\n"
                }
            ],
            "date": 1742566017640,
            "name": "Commit-0",
            "content": "AWS Lambda Deployment using CloudFormation\n\nThis open-source project helps automate the deployment of AWS Lambda functions using CloudFormation. It includes a script to package and deploy Lambda functions along with API Gateway configurations.\n\nProject Structure\n\naws-lambda-deployment/\n│── scripts/\n│ ├── pushtoStaging.sh # Shell script for packaging and deploying Lambda functions\n│── config/\n│ ├── template_2.json # JSON file with API Gateway endpoints and Lambda metadata\n│── src/\n│ ├── CloudFormation.js # Script to generate CloudFormation templates\n│── README.md # Documentation on how to use the project\n│── LICENSE # Open-source license (e.g., MIT)\n\nFeatures\n\nAutomates the deployment of AWS Lambda functions using CloudFormation.\n\nReads API Gateway configurations from template_2.json.\n\nGenerates a CloudFormation template dynamically.\n\nDeploys and updates the CloudFormation stack.\n\nSetup & Usage\n\nPrerequisites\n\nAWS CLI installed and configured.\n\nNode.js installed.\n\nBash shell for executing pushtoStaging.sh.\n\nDeployment Steps\n\nClone the repository:\n\ngit clone https://github.com/your-repo/aws-lambda-deployment.git\ncd aws-lambda-deployment\n\nInstall dependencies:\n\ncd src\nnpm install\n\nUpdate config/template_2.json with your API Gateway and Lambda configurations.\n\nRun the deployment script:\n\n./scripts/pushtoStaging.sh\n\nFile Descriptions\n\npushtoStaging.sh\n\nPackages Lambda functions into a zip file.\n\nGenerates a CloudFormation template using CloudFormation.js.\n\nDeploys the stack using AWS CLI.\n\nCloudFormation.js\n\nReads template_2.json.\n\nCreates a CloudFormation template dynamically.\n\ntemplate_2.json\n\nDefines API Gateway routes and associated Lambda function handlers.\n\nLicense\n\nThis project is licensed under the MIT License.\n"
        }
    ]
}